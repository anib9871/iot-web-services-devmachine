# Generated by Django 5.2.5 on 2025-08-20 15:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MasterDevice',
            fields=[
                ('DEVICE_ID', models.IntegerField(primary_key=True, serialize=False)),
                ('DEVICE_NAME', models.CharField(max_length=200)),
                ('DEVICE_MNEMONIC', models.CharField(blank=True, max_length=20, null=True)),
                ('DEVICE_IP', models.CharField(blank=True, max_length=30, null=True)),
                ('DEVICE_STATUS', models.IntegerField()),
                ('DEVICE_STATUS_CD', models.IntegerField()),
                ('ORG_ID', models.IntegerField()),
                ('UNIT_ID', models.IntegerField()),
                ('CRT_DT', models.DateField(blank=True, null=True)),
                ('CRT_BY', models.IntegerField(blank=True, null=True)),
                ('LST_UPD_DT', models.DateField(blank=True, null=True)),
                ('LST_UPD_BY', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'master_device',
            },
        ),
        migrations.CreateModel(
            name='CompassDates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ORG_ID', models.IntegerField()),
                ('BRANCH_ID', models.IntegerField()),
                ('CMPS_DT', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'compass_dates',
                'unique_together': {('ORG_ID', 'BRANCH_ID')},
            },
        ),
        migrations.CreateModel(
            name='DeviceReadingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DEVICE_ID', models.IntegerField()),
                ('SENSOR_ID', models.IntegerField()),
                ('PARAMETER_ID', models.IntegerField()),
                ('READING_DATE', models.DateField(blank=True, null=True)),
                ('READING_TIME', models.IntegerField()),
                ('READING', models.FloatField(blank=True, null=True)),
                ('ORG_ID', models.IntegerField()),
                ('UNIT_ID', models.IntegerField()),
                ('CRT_DT', models.DateField(blank=True, null=True)),
                ('CRT_BY', models.IntegerField(blank=True, null=True)),
                ('LST_UPD_DT', models.DateField(blank=True, null=True)),
                ('LST_UPD_BY', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_reading_log',
                'unique_together': {('DEVICE_ID', 'SENSOR_ID', 'PARAMETER_ID', 'READING_DATE', 'READING_TIME')},
            },
        ),
    ]
